CAP 是分布式系统设计理论，BASE 是在具体的工程实践中总结出来的结论，更加务实。

要点：
CAP 关注的是数据，不是整个系统。整个系统设计时可以根据不同的数据分别选择 CP 还是 AP。

问题 1：为什么分布式系统下 CAP 只能是 CP 或者 AP？
虽然 CAP 理论定义是三个要素中只能取两个，但放到分布式环境下来思考，我们会发现必须选择 P（分区容忍）要素，
因为网络本身无法做到 100% 可靠，有可能出故障，所以分区是一个必然的现象。
如果我们选择 CA 而放弃了 P，为了保证 C，系统需要停止写入，当有写入请求时，系统返回 error（当前系统不允许写入，防止破坏 C）
，这又和 A 冲突了，因为 A 要求返回 no error 和 no timeout。因此，分布式系统理论上不可能选择 CA 架构，只能选择 CP 或者 AP。


问题2：BASE 理论中最终一致性怎么保证？
读时修复 : 在读取数据时，检测数据的不一致，进行修复。比如 Cassandra 的 Read Repair 实现，具体来说，在向 Cassandra 系统查询数据的时候，如果检测到不同节点 的副本数据不一致，系统就自动修复数据。
写时修复 : 在写入数据，检测数据的不一致时，进行修复。比如 Cassandra 的 Hinted Handoff 实现。具体来说，Cassandra 集群的节点之间远程写数据的时候，如果写失败 就将数据缓存下来，然后定时重传，修复数据的不一致性。
异步修复 : 这个是最常用的方式，通过定时对账检测副本数据的一致性，并修复。
